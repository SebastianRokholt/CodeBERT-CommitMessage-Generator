{"commit_tokens": ["Fix", "linking", "multiple", "files", "in", "Make"], "add_tokens": "recipe = MakeCall ( recipename , ' ' . join ( target_path ( env , i ) for i in rule . files ) ) ,", "del_tokens": "recipe = MakeCall ( recipename , * [ target_path ( env , i ) for i in rule . files ] ) ,", "commit_type": "fix"}
{"commit_tokens": ["allow", "-", "x", "argument", "for", "migrate", "command"], "add_tokens": "@ MigrateCommand . option ( '-x' , '--x-arg' , dest = 'x_arg' , default = None , action = 'append' , help = ( \"Additional arguments consumed \" \"by custom env.py scripts\" ) ) branch_label = None , version_path = None , rev_id = None , x_arg = None ) : directory , opts = [ 'autogenerate' ] , x_arg = x_arg )", "del_tokens": "branch_label = None , version_path = None , rev_id = None ) : directory , opts = [ 'autogenerate' ] )", "commit_type": "allow"}
{"commit_tokens": ["updated", "&", "tested", "python", "examples", "with", "pip", "packages"], "add_tokens": "from libcombine import *", "del_tokens": "try : from libcombine import * except ImportError : # fix as long as there is no pip package: see https://github.com/sbmlteam/libCombine/issues/10 from tecombine import *", "commit_type": "update"}
{"commit_tokens": ["added", "logo", "favicon", "custom", "styles"], "add_tokens": "html_theme_options = { 'pytorch_project' : 'docs' , 'canonical_url' : 'http://texsoup.alvinwan.com/docs' , 'collapse_navigation' : False , 'display_version' : True , 'logo_only' : True , }", "del_tokens": "# # html_theme_options = { # 'pytorch_project': 'docs', # 'canonical_url': 'https://pytorch.org/docs/stable/', # 'collapse_navigation': False, # 'display_version': True, # 'logo_only': True, # }", "commit_type": "add"}
{"commit_tokens": ["fixed", "retrial", "issue", "on", "tcp", "call"], "add_tokens": "__version__ = '1.1.34rc1'", "del_tokens": "__version__ = '1.1.33'", "commit_type": "fix"}
{"commit_tokens": ["Add", "db", "URL", "&", "port", "options", "to", "migrations", "run", "CLI"], "add_tokens": "__version__ = '0.15.9'", "del_tokens": "__version__ = '0.15.8'", "commit_type": "add"}
{"commit_tokens": ["fixed", "typo", ".", "Tried", "implementing", "the", "FMFile", "class"], "add_tokens": "#return res.json() files = list ( ) for transfer in res . json ( ) [ 'transfers' ] : files . append ( FMFile ( file_data ) ) return files return False return True return self . files return dict ( self . payload )", "del_tokens": "return res . json ( ) #for file_data in res.json()['transfers']['files']: #self.files.append(FMFile(file_data)) #return sef.files print res . json ( ) return sef . files return dict ( self . _payload )", "commit_type": "fix"}
{"commit_tokens": ["Moving", "towards", "a", "more", "libraryish", "interface", "."], "add_tokens": "'Cisco 3000 Series VPN Concentrator' : 33 , 'Citrix' : 34 , 'Cobalt Raq' : 5 , 'Covalent Server Software' : 6 , 'IBM HTTP Server' : 7 , 'IBM Internet Connection Server' : 8 , 'iPlanet' : 9 , 'Java Web Server (Javasoft / Sun)' : 10 , 'Lotus Domino' : 11 , 'Lotus Domino Go!' : 12 , 'Microsoft IIS 1.x to 4.x' : 13 , 'Microsoft IIS 5.x and later' : 14 , 'Netscape Enterprise Server' : 15 , 'Netscape FastTrac' : 16 , 'Novell Web Server' : 17 , 'Oracle' : 18 , 'Quid Pro Quo' : 19 , 'R3 SSL Server' : 20 , 'Raven SSL' : 21 , 'RedHat Linux' : 22 , 'SAP Web Application Server' : 23 , 'Tomcat' : 24 , 'Website Professional' : 25 , 'WebStar 4.x and later' : 26 , 'WebTen (from Tenon)' : 27 , 'Zeus Web Server' : 28 , 'Ensim' : 29 , 'Plesk' : 30 , 'WHM/cPanel' : 31 , 'H-Sphere' : 32 , return result return ComodoCA . status_code [ result . statusCode ]", "del_tokens": "# We set a floor on the CA polling time to not create undue traffic self . ca_poll_wait = kwargs [ 'ca_poll_wait' ] if kwargs [ 'ca_poll_wait' ] >= 60 else 60 sys . exit ( 3 ) print ( self . ca_poll_wait ) print ( result ) sys . exit ( 5 ) print ( ComodoCA . status_code [ result . statusCode ] ) sys . exit ( 2 )", "commit_type": "move"}
{"commit_tokens": ["Make", "date", "thing", "run", "in", "queue", "steps", "up", "delay", "after", "rate", "limit", "exceeded"], "add_tokens": "task . retry ( countdown = rate * 60 )", "del_tokens": "task . retry ( countdown = rate * 10 )", "commit_type": "make"}
{"commit_tokens": ["add", "mapping", "estimation", "(", "still", "debugging", ")"], "add_tokens": "find an approximate minimum of f ( xk + alpha * pk ) that satifies the armijo conditions . xk : np . ndarray pk : np . ndarray gradient of f at xk g amma ^ T 1 = b loss matrix log dictionary return only if log == True in parameters log [ 'loss' ] . append ( f_val )", "del_tokens": "find an approximate minimum of f ( xk + alpha * pk ) that satifies the armijo conditions . xk : np . ndarray pk : np . ndarray gradient of f at xk g amma ^ T 1 = b loss matrix log dictionary return only if log == True in parameters log [ 'loss' ] . append ( f_val )", "commit_type": "add"}
